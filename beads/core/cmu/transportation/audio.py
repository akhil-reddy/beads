###############################################################################
# Spiral Ganglion Neuron (SGN)
###############################################################################
import numpy as np


class SpiralGanglionNeuron:
    def __init__(self, refractory_period=0.001):
        """
        Models a spiral ganglion neuron that transmits auditory information from the cochlea to the brain.

        Args:
            refractory_period (float): Minimal time (s) between spikes.

        Research Basis:
            - Liberman (1991); Spoendlin (1984): Characterize the electrophysiological properties of SGNs.
        """
        self.refractory_period = refractory_period
        self.last_spike_time = -np.inf
        self.spike_times = []  # Record spike times

    def transmit(self, spike, current_time):
        """
        If a spike is generated by the neural transducer and the refractory period has elapsed,
        record the spike time.

        Args:
            spike (int): 1 if a spike occurred, else 0.
            current_time (float): Current simulation time (s).

        Returns:
            int: 1 if the spike is transmitted, else 0.
        """
        if spike and (current_time - self.last_spike_time) >= self.refractory_period:
            self.spike_times.append(current_time)
            self.last_spike_time = current_time
            return 1
        return 0
